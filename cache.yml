!!com.aptana.scripting.model.BundleElement
author: Jeremy Ashkenas, Christopher Williams
children:
- !!com.aptana.scripting.model.MenuElement
  children:
  - children:
    - children: &id001 []
      commandName: Run
      customProperties: null
      displayName: Run
      path: bundle.rb
      scope: null
    - children: *id001
      commandName: Compile and Display JS
      customProperties: null
      displayName: Compile and Display JS
      path: bundle.rb
      scope: null
    - children: *id001
      commandName: Run selected text
      customProperties: null
      displayName: Run selected text
      path: bundle.rb
      scope: null
    commandName: Run
    customProperties: null
    displayName: Run
    path: bundle.rb
    scope: null
  - children:
    - children: *id001
      commandName: If
      customProperties: null
      displayName: If
      path: bundle.rb
      scope: null
    - children: *id001
      commandName: If .. Else
      customProperties: null
      displayName: If .. Else
      path: bundle.rb
      scope: null
    - children: *id001
      commandName: Else if
      customProperties: null
      displayName: Else if
      path: bundle.rb
      scope: null
    - children: *id001
      commandName: Ternary If
      customProperties: null
      displayName: Ternary If
      path: bundle.rb
      scope: null
    - children: *id001
      commandName: Unless
      customProperties: null
      displayName: Unless
      path: bundle.rb
      scope: null
    commandName: Control
    customProperties: null
    displayName: Control
    path: bundle.rb
    scope: null
  - children:
    - children: *id001
      commandName: New Function
      customProperties: null
      displayName: New Function
      path: bundle.rb
      scope: null
    - children: *id001
      commandName: Function
      customProperties: null
      displayName: Function
      path: bundle.rb
      scope: null
    - children: *id001
      commandName: Function (bound)
      customProperties: null
      displayName: Function (bound)
      path: bundle.rb
      scope: null
    - children: *id001
      commandName: Array Comprehension
      customProperties: null
      displayName: Array Comprehension
      path: bundle.rb
      scope: null
    - children: *id001
      commandName: Object comprehension
      customProperties: null
      displayName: Object comprehension
      path: bundle.rb
      scope: null
    - children: *id001
      commandName: Range comprehension (exclusive)
      customProperties: null
      displayName: Range comprehension (exclusive)
      path: bundle.rb
      scope: null
    - children: *id001
      commandName: Range comprehension (inclusive)
      customProperties: null
      displayName: Range comprehension (inclusive)
      path: bundle.rb
      scope: null
    - children: *id001
      commandName: Switch
      customProperties: null
      displayName: Switch
      path: bundle.rb
      scope: null
    - children: *id001
      commandName: Class
      customProperties: null
      displayName: Class
      path: bundle.rb
      scope: null
    - children: *id001
      commandName: Try .. Catch
      customProperties: null
      displayName: Try .. Catch
      path: bundle.rb
      scope: null
    commandName: Constructs
    customProperties: null
    displayName: Constructs
    path: bundle.rb
    scope: null
  - children:
    - children: *id001
      commandName: Insert Heredoc """ quotes
      customProperties: null
      displayName: Insert Heredoc """ quotes
      path: bundle.rb
      scope: null
    - children: *id001
      commandName: Insert Heredoc ''' quotes
      customProperties: null
      displayName: Insert Heredoc ''' quotes
      path: bundle.rb
      scope: null
    - children: *id001
      commandName: Insert Heredoc """ comment
      customProperties: null
      displayName: Insert Heredoc """ comment
      path: bundle.rb
      scope: null
    - children: *id001
      commandName: Align Assignments
      customProperties: null
      displayName: Align Assignments
      path: bundle.rb
      scope: null
    - children: *id001
      commandName: Raw javascript
      customProperties: null
      displayName: Raw javascript
      path: bundle.rb
      scope: null
    - children: *id001
      commandName: Interpolated Code
      customProperties: null
      displayName: Interpolated Code
      path: bundle.rb
      scope: null
    - children: *id001
      commandName: log
      customProperties: null
      displayName: log
      path: bundle.rb
      scope: null
    commandName: Other
    customProperties: null
    displayName: Other
    path: bundle.rb
    scope: null
  commandName: CoffeeScript
  customProperties: null
  displayName: CoffeeScript
  path: bundle.rb
  scope: null
- !!com.aptana.scripting.model.EnvironmentElement {customProperties: null, displayName: environment-665e5e1b-6caf-4eb7-b102-f027336c4476,
  path: bundle.rb, scope: source.coffee}
- !!com.aptana.scripting.model.SmartTypingPairsElement
  customProperties: null
  displayName: smart_typing_pairs-c1daae8b-48eb-462c-bf2e-b93627e23be1
  pairs: ['"', '"', (, ), '{', '}', '[', ']', '''', '''', '`', '`']
  path: bundle.rb
  scope: source.coffee
- !!com.aptana.scripting.model.CommandElement
  async: false
  customProperties: null
  displayName: Align Assignments
  input: [selection]
  inputPath: null
  keyBindingMap:
    !!com.aptana.scripting.model.Platform 'ALL': ['M3+M1+]']
  outputPath: null
  outputType: replace_selection
  path: commands/align_assignments.rb
  runType: current_thread
  scope: source.coffee
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.CommandElement
  async: false
  customProperties: null
  displayName: Compile and Display JS
  input: [document]
  inputPath: null
  keyBindingMap:
    !!com.aptana.scripting.model.Platform 'ALL': [M1+B]
  outputPath: null
  outputType: discard
  path: commands/compile_and_display_js.rb
  runType: current_thread
  scope: source.coffee
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.CommandElement
  async: false
  customProperties: null
  displayName: Insert Heredoc """ quotes
  input: [none, line]
  inputPath: null
  keyBindingMap:
    !!com.aptana.scripting.model.Platform 'ALL': [M1+"]
  outputPath: null
  outputType: insert_as_snippet
  path: commands/insert_heredoc_"""_quotes.rb
  runType: current_thread
  scope: source.coffee
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.CommandElement
  async: false
  customProperties: null
  displayName: Insert Heredoc ''' quotes
  input: [none, line]
  inputPath: null
  keyBindingMap:
    !!com.aptana.scripting.model.Platform 'ALL': [M1+']
  outputPath: null
  outputType: insert_as_snippet
  path: commands/insert_heredoc_'''_quotes.rb
  runType: current_thread
  scope: source.coffee
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.CommandElement
  async: false
  customProperties: null
  displayName: Insert Heredoc """ comment
  input: [none, line]
  inputPath: null
  keyBindingMap:
    !!com.aptana.scripting.model.Platform 'ALL': [M4+#]
  outputPath: null
  outputType: insert_as_snippet
  path: commands/insert_heredoc_comment.rb
  runType: current_thread
  scope: source.coffee
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.CommandElement
  async: false
  customProperties: null
  displayName: New Function
  input: [selection, word]
  inputPath: null
  keyBindingMap:
    !!com.aptana.scripting.model.Platform 'ALL': [M2+ENTER]
  outputPath: null
  outputType: insert_as_snippet
  path: commands/new_function.rb
  runType: current_thread
  scope: source.coffee
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.CommandElement
  async: false
  customProperties: null
  displayName: Run
  input: [selection]
  inputPath: null
  keyBindingMap:
    !!com.aptana.scripting.model.Platform 'ALL': [M1+R]
  outputPath: null
  outputType: show_as_html
  path: commands/run.rb
  runType: current_thread
  scope: source.coffee
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.CommandElement
  async: false
  customProperties: null
  displayName: Run selected text
  input: [selection]
  inputPath: null
  keyBindingMap:
    !!com.aptana.scripting.model.Platform 'ALL': [M1+M2+R]
  outputPath: null
  outputType: show_as_tooltip
  path: commands/run_selected_text.rb
  runType: current_thread
  scope: source.coffee
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [fora]
  displayName: Array Comprehension
  expansion: "for ${1:name} in ${2:array}\n  ${0:# body...}"
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.coffee
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [bfun]
  displayName: Function (bound)
  expansion: "${1:(${2:args}) }=>\n  ${0:# body...}"
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.coffee
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [cla]
  displayName: Class
  expansion: "class ${1:ClassName}${2: extends ${3:Ancestor}}\n\n  ${4:constructor:\
    \ (${5:args}) ->\n    ${6:# body...}}\n  $7"
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.coffee
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [elif]
  displayName: Else if
  expansion: "else if ${1:condition}\n  ${0:# body...}"
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.coffee
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [fun]
  displayName: Function
  expansion: "${1:name} = (${2:args}) ->\n  ${0:# body...}\n\n"
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.coffee
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [ife]
  displayName: If .. Else
  expansion: "if ${1:condition}\n  ${2:# body...}\nelse\n  ${3:# body...}"
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.coffee
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [if]
  displayName: If
  expansion: "if ${1:condition}\n  ${0:# body...}"
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.coffee
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: ['#']
  displayName: Interpolated Code
  expansion: '#{${1:$TM_SELECTED_TEXT}}'
  input: [none]
  inputPath: null
  keyBindingMap:
    !!com.aptana.scripting.model.Platform 'ALL': ['#']
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: (string.quoted.double.coffee) - string source, (string.quoted.double.heredoc.coffee) - string source
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [log]
  displayName: log
  expansion: console.log $0
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.coffee
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [foro]
  displayName: Object comprehension
  expansion: "for ${1:key}, ${2:value} of ${3:Object}\n  ${0:# body...}"
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.coffee
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [forrex]
  displayName: Range comprehension (exclusive)
  expansion: "for ${1:name} in [${2:start}...${3:finish}]${4: by ${5:step}}\n  ${0:#\
    \ body...}"
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.coffee
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [forr]
  displayName: Range comprehension (inclusive)
  expansion: "for ${1:name} in [${2:start}..${3:finish}]${4: by ${5:step}}\n  ${0:#\
    \ body...}"
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.coffee
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties: null
  displayName: Raw javascript
  expansion: \`${1:`pbpaste`}\`
  input: [none]
  inputPath: null
  keyBindingMap:
    !!com.aptana.scripting.model.Platform 'ALL': [M4+J]
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.coffee
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [swi]
  displayName: Switch
  expansion: "switch ${1:object}\n  when ${2:value}\n    ${0:# body...}"
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.coffee
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [ifte]
  displayName: Ternary If
  expansion: if ${1:condition} then ${2:value} else ${3:other}
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.coffee
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [try]
  displayName: Try .. Catch
  expansion: "try\n  $1\ncatch ${2:error}\n  $3"
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.coffee
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [unl]
  displayName: Unless
  expansion: ${1:action} unless ${2:condition}
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.coffee
  workingDirectoryType: UNDEFINED
copyright: null
customProperties: {contact_email_rot_13: wnfuxranf@tznvy.pbz}
decreaseIndentMarkers: {!scope 'source.coffee': !regexp '(?-mix:^\s*(\}|\]|else|catch|finally)$)'}
description: 'Coffeescript ruble ported from official Coffeescript Textmate bundle.

  '
displayName: CoffeeScript
fileTypeRegistry: {'*.coffee': source.coffee, Cakefile: source.coffee}
fileTypes: ['*.coffee', Cakefile]
foldingStartMarkers: {!scope 'source.coffee': !regexp '(?-mix:.*(->|=>)\s*$|.*[\[{]\s*$)'}
foldingStopMarkers: {!scope 'source.coffee': !regexp '(?-mix:^\s*$|^\s*[}\]]\s*$)'}
increaseIndentMarkers: {!scope 'source.coffee': !regexp "(?x-mi:\n    ^\\s*\n    (.*class\n\
    \    |[a-zA-Z\\$_](\\w|\\$|:|\\.)*\\s*(?=\\:(\\s*\\(.*\\))?\\s*((=|-)>\\s*$))\
    \ # function that is not one line\n    |[a-zA-Z\\$_](\\w|\\$|\\.)*\\s*(?=(?!\\\
    ::)\\:(?!(\\s*\\(.*\\))?\\s*((=|-)>))):\\s*((if|while)(?!.*?then)|for|$) # assignment\
    \ using multiline if,while,for\n    |(if|while)(?!.*?then)|for\n    |.*[-=]>$\n\
    \    |.*[\\{\\[]$))"}
license: null
licenseUrl: null
path: bundle.rb
repository: git://github.com/aptana/coffeescript.ruble.git
visible: true
